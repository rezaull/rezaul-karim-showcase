name: Deploy to cPanel
on:
  push:
    branches:
      - main

env:
  APP_NAME: "Rezaul Karim"
  APP_URL: "https://reza.nexxenit.com"
  REMOTE_USER: "ezbitlyc"
  REMOTE_HOST: "reza.nexxenit.com"
  REMOTE_PATH: "/home/ezbitlyc/reza.nexxenit.com"
  
  TELEGRAM_BOT_TOKEN: "8187320150:AAFaUAZzia395zJFDIWCXMMUduV0ebxJIp0"
  TELEGRAM_CHAT_ID: "-1002293329405"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Send Start Notification
        run: |
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
          -d chat_id="${TELEGRAM_CHAT_ID}" \
          -d text="üöÄ *${APP_NAME} Deployment Started!*\nüë§ Triggered by: ${{ github.actor }}\nüìù Commit: ${{ github.event.head_commit.message }}" \
          -d parse_mode="Markdown"

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          npm install
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
          -d chat_id="${TELEGRAM_CHAT_ID}" \
          -d text="üì¶ *Dependencies Installed Successfully!*" \
          -d parse_mode="Markdown"

      - name: Build project
        id: build
        run: |
          START_TIME=$(date +%s)
          npm run build
          END_TIME=$(date +%s)
          BUILD_TIME=$((END_TIME - START_TIME))
          echo "::set-output name=build_time::$BUILD_TIME"
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
          -d chat_id="${TELEGRAM_CHAT_ID}" \
          -d text="‚úÖ *Build Successful!*\nüïí Build Time: *${BUILD_TIME}s*" \
          -d parse_mode="Markdown"

      - name: Install SSH Keys
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary
          if_key_exists: replace

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${REMOTE_HOST} >> ~/.ssh/known_hosts

      - name: Deploy with rsync
        id: deploy
        run: |
          cp .htaccess dist/
          START_TIME=$(date +%s)
          FOLDER_SIZE=$(du -sh dist | cut -f1)

          if rsync -avz --delete ./dist/ ${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_PATH}/; then
            END_TIME=$(date +%s)
            UPLOAD_TIME=$((END_TIME - START_TIME))
            
            curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d chat_id="${TELEGRAM_CHAT_ID}" \
            -d text="üì° *Files Uploaded Successfully!*\nüïí Upload Time: *${UPLOAD_TIME}s*\nüì¶ Upload Size: *${FOLDER_SIZE}*" \
            -d parse_mode="Markdown"
            
            curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d chat_id="${TELEGRAM_CHAT_ID}" \
            -d text="üèÅ *${APP_NAME} Deployment Completed!*\nüîó Visit: ${APP_URL}\nüë§ Deployed by: ${{ github.actor }}" \
            -d parse_mode="Markdown"
          else
            curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d chat_id="${TELEGRAM_CHAT_ID}" \
            -d text="‚ùå *Deployment Failed!*\n\`\`\`\nUpload failed during rsync operation\n\`\`\`\nüë§ User: ${{ github.actor }}" \
            -d parse_mode="Markdown"
            exit 1
          fi

      - name: Notify on Failure
        if: failure()
        run: |
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
          -d chat_id="${TELEGRAM_CHAT_ID}" \
          -d text="‚ùå *Deployment Process Failed!*\nüë§ User: ${{ github.actor }}\n‚ö†Ô∏è Step: ${{ github.job }}" \
          -d parse_mode="Markdown"
